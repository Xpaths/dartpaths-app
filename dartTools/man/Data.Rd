% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classData.R
\name{Data}
\alias{Data}
\title{Class for storing data}
\description{
Class for storing data

Class for storing data
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{tableColumns}}{Named list with names of all the columns for each table}

\item{\code{tableNames}}{Names of tables}

\item{\code{tables}}{List with the actual data.table objects}

\item{\code{columnConversionFunctions}}{Named vector with functions (e.g. as.character) that applied after loading a columns with that name in any of the tables}

\item{\code{metadata}}{Named list with metadata}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Data$new()}}
\item \href{#method-print}{\code{Data$print()}}
\item \href{#method-dump}{\code{Data$dump()}}
\item \href{#method-loadDump}{\code{Data$loadDump()}}
\item \href{#method-printAllTables}{\code{Data$printAllTables()}}
\item \href{#method-getData}{\code{Data$getData()}}
\item \href{#method-nrows}{\code{Data$nrows()}}
\item \href{#method-ncols}{\code{Data$ncols()}}
\item \href{#method-addData}{\code{Data$addData()}}
\item \href{#method-addTable}{\code{Data$addTable()}}
\item \href{#method-checkTableConventions}{\code{Data$checkTableConventions()}}
\item \href{#method-writeTxtTable}{\code{Data$writeTxtTable()}}
\item \href{#method-clone}{\code{Data$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new Data object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Print a summary of the contents of this object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dump"></a>}}
\if{latex}{\out{\hypertarget{method-dump}{}}}
\subsection{Method \code{dump()}}{
Dump the database to files
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$dump(
  dumpPath = getOption("dartpaths_default_dumppath"),
  dumpType = "txt",
  gzip = FALSE,
  overwrite = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dumpPath}}{Directory path to which the output files are written}

\item{\code{dumpType}}{Type of dump (currently only 'txt' is supported)}

\item{\code{gzip}}{Set TRUE if dumped tables need to be gzipped}

\item{\code{overwrite}}{If TRUE, existing files are overwritten}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-loadDump"></a>}}
\if{latex}{\out{\hypertarget{method-loadDump}{}}}
\subsection{Method \code{loadDump()}}{
Load dumped files into the database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$loadDump(
  dumpPath = getOption("dartpaths_default_dumppath"),
  dumpType = "txt",
  verbose = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dumpPath}}{Directory path to which the output files are written}

\item{\code{dumpType}}{Type of dump (currently only 'txt' is supported)}

\item{\code{verbose}}{If TRUE, some extra information is printed}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
If dumpPath refers to a zip file, this is assumed to be a zipped dump directory
}

\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-printAllTables"></a>}}
\if{latex}{\out{\hypertarget{method-printAllTables}{}}}
\subsection{Method \code{printAllTables()}}{
Print all tables in the database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$printAllTables(nrows = 5, topn = 2)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{nrows}}{The number of rows which will be printed before truncation is enforced.}

\item{\code{topn}}{The number of rows to be printed from the beginning and end of tables with more than \code{nrows} rows.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getData"></a>}}
\if{latex}{\out{\hypertarget{method-getData}{}}}
\subsection{Method \code{getData()}}{
Get a table from the database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$getData(tablename, copy = TRUE, allowEmpty = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tablename}}{Name of the table}

\item{\code{copy}}{If TRUE, a copy is made of the table. If FALSE, the original table is returned.}

\item{\code{allowEmpty}}{If FALSE, an error is raised if the table is empty.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
data.table object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-nrows"></a>}}
\if{latex}{\out{\hypertarget{method-nrows}{}}}
\subsection{Method \code{nrows()}}{
Get number of rows
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$nrows(tablename)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tablename}}{Name of the table}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
scalar
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ncols"></a>}}
\if{latex}{\out{\hypertarget{method-ncols}{}}}
\subsection{Method \code{ncols()}}{
Get number of columns
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$ncols(tablename)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tablename}}{Name of the table}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
scalar
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addData"></a>}}
\if{latex}{\out{\hypertarget{method-addData}{}}}
\subsection{Method \code{addData()}}{
Add rows to a table from the database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$addData(
  tablename,
  newdata,
  fill = FALSE,
  ignoreNewColumns = TRUE,
  overwrite = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tablename}}{Name of the table}

\item{\code{newdata}}{Data to be added to the table}

\item{\code{fill}}{TRUE fills missing columns in newdata with NAs. FALSE throws an error if columns are missing.}

\item{\code{ignoreNewColumns}}{If FALSE, an error is given if newdata contains new columns. If TRUE, new columns are ignored.}

\item{\code{overwrite}}{if TRUE, the existing table is entirely replaced by newdata}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addTable"></a>}}
\if{latex}{\out{\hypertarget{method-addTable}{}}}
\subsection{Method \code{addTable()}}{
Add a new table to the database. Should be handled with care!
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$addTable(tablename, tablecontents)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tablename}}{Name of the table}

\item{\code{tablecontents}}{Data to be added to the new table}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checkTableConventions"></a>}}
\if{latex}{\out{\hypertarget{method-checkTableConventions}{}}}
\subsection{Method \code{checkTableConventions()}}{
check if table definitions follow conventions (used during initialization)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$checkTableConventions()}\if{html}{\out{</div>}}
}

\subsection{Details}{
throws error if conventions are violated
}

\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-writeTxtTable"></a>}}
\if{latex}{\out{\hypertarget{method-writeTxtTable}{}}}
\subsection{Method \code{writeTxtTable()}}{
to write a text dump for a single table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$writeTxtTable(dumpPath, tablename, gzip = FALSE, overwrite = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dumpPath}}{Directory path to which the output file is written}

\item{\code{tablename}}{Name of table, used to create the output file name}

\item{\code{gzip}}{Logical. If TRUE, the file is gzipped}

\item{\code{overwrite}}{Logical. If TRUE, an existing file is overwritten}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Data$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
